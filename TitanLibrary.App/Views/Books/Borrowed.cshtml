@model IEnumerable<TitanLibrary.Presistence.Domain.Entities.Book>

@{
    ViewData["Title"] = "Borrowed Books";
}

@if(Model.Count() == 0)
{
    <div class="container text-center mt-5 p-4 border rounded shadow-sm bg-light">
        <h4 class="text-secondary mb-3">No Borrowed Books Yet?</h4>
        <a asp-action="Index" class="btn btn-primary">Browse books to borrow</a>
    </div>
}
else
{
    <table class="table table-striped table-hover table-bordered align-middle">
        <thead class="table-dark text-center">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Title)</th>
                <th>@Html.DisplayNameFor(model => model.Author)</th>
                <th>@Html.DisplayNameFor(model => model.ISBN)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                    <td>@Html.DisplayFor(modelItem => item.Author)</td>
                    <td>@Html.DisplayFor(modelItem => item.ISBN)</td>
                    <td class="text-center">
                        <a class="btn btn-primary btn-sm" asp-controller="Books" asp-action="Details" asp-route-id="@item.BookID">
                            <i class="bi bi-eye"></i> Show
                        </a>
                        <a class="btn btn-success btn-sm" asp-controller="Books" asp-action="Return" asp-route-id="@item.BookID">
                            <i class="bi bi-arrow-return-left"></i> Return
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}
    